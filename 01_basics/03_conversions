let score = "22"

/*
console.log(score)
console.log(typeof score)
console.log(typeof (score))

let valueInNummber = Number(score)
console.log(valueInNummber)
console.log(typeof valueInNummber)
*/

//conversion in number
// "22" => 22
// "22abc" => NaN  mean Not a Number
// "abc" => NaN
// null => 0
// undefined => NaN
// true => 1 , false => 0

let isLoggedIn = "abc"
/*
let booleanIsLoggedIn = Boolean(isLoggedIn)
console.log(booleanIsLoggedIn)
console.log(typeof booleanIsLoggedIn)
*/
// conversion to Boolean
// 1 => true ; 0 => false
// "" => false
// "abc" => true

let someNumber = 33

/*
console.log(someNumber)
console.log(typeof someNumber)
let stringNumber = String(someNumber)// converting to String
console.log(stringNumber)
console.log(typeof stringNumber)
 */

//************Operations************

// console.log(2+3)
// console.log(2-3)
// console.log(2*3)
// console.log(2**3)
// console.log(2/3)
// console.log(2%3)

let str1 = "Muhammad "
let str2 = "Abrar"

let str3 = str1 + str2
//console.log(str3)

// console.log("1" + 2)
// console.log(1 + "2")
// console.log("1" + 2 + 3)
// console.log(1 + 2 + "3")
// console.log(1 + 2 + "3" + 4 +5)
/* 
if first value is string then it will treat all values as a string
And If first value is a number it will apply calcilation upto first string on the right side and then next trat evey value as a string.
*/

console.log(true)
console.log(false)

/**
 Postfix
 the increment operator increments( orignal variable value) and returns the value(to other variable) before incrementing

 prefix

 */

 let a = 3
 let b = a++
// a++
// let b = a++

 console.log(`a:${a}, b:${b}`);
// a:4, b:3

 let x = 3
 let y = ++x

 console.log(`x:${x}, y:${y}`)
// x:4, y:4

// link to study
// https://tc39.es/ecma262/multipage/abstract-operations.html#sec-type-conversion